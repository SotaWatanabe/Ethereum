//gas
//ユーザーは関数を実行するたびにgasを支払う
//ユーザーはgasを払ってコードを動かすからコードの最適化が必要
//別のアルゴリズムを持つコンセンサスのサイドチェーンで実行することは十分に考えられる

//イーサリアムではuintはuint8やuint32にかかわらず、データ量としてはuint256を持つ
//なので、uint8でもuint256でも変わりがない
//しかし、例外があり、struct構造の中ではルールが変わる
//structの中にuintがある場合、なるべく小さいuintを使うことでデータ量の削減が可能

struct NormalStruct {
  uint a;
  uint b;
  uint c;
}

struct MiniMe {
  uint32 a;
  uint32 b;
  uint c;
}

//上記の2例では、下の方が削減している
//なので使用するgasも少なくなる
